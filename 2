# Redis
# Домашнее задание - Кеширование Redis/memcached

---

### Задание 1. Кэширование. 

Приведите примеры проблем, которые может решить кэширование. 

*Приведите ответ в свободной форме.*

 1) Повышение производительности - достигается за счет складывания в кэш данных, к которым чаще всего происходит обращение;
 2) Увеличение скорости ответа;
 3) Экономия ресурсов базы данных - например, применяя кэширование тяжелых запросов;
 4) Сглаживание бустов трафика - например, во время черной пятницы онлайн-магазины используют кэш, чтобы переживать резкое увеличение трафика. 

---

### Задание 2. Memcached.

Установите и запустите memcached.

*Приведите скриншот systemctl status memcached, где будет видно, что memcached запущен.*

![image](https://user-images.githubusercontent.com/105008137/181200667-b124f5bb-e157-4b72-b06c-bdc1ea89a27b.png)

---

### Задание 3. Удаление по TTL в Memcached.

Запишите в memcached несколько ключей с любыми именами и значениями, для которых выставлен TTL 5. 

*Приведите скриншот, на котором видно, что спустя 5 секунд ключи удалилсь из базы.*
![image](https://user-images.githubusercontent.com/105008137/181230212-cdbea4cb-0aa1-4246-87ce-9dc8ea15fe26.png)

![image](https://user-images.githubusercontent.com/105008137/181230436-3f4ee98c-4a65-4100-9567-df739763517a.png)

---

### Задание 4. Запись данных в Redis. 

Запишите в redis несколько ключей с любыми именами и значениями. 

*Через redis-cli достаньте все записанные ключи и значения из базы, приведите скриншот этой операции.*
![image](https://user-images.githubusercontent.com/105008137/181209796-b5097fa2-9847-4aff-9c93-3fd2659c1ab6.png)

![image](https://user-images.githubusercontent.com/105008137/181235861-b023fdbb-b4b3-4885-9265-26d43e0b3db6.png)



## Дополнительные задания (со звездочкой*)
Эти задания дополнительные (не обязательные к выполнению) и никак не повлияют на получение вами зачета по этому домашнему заданию. Вы можете их выполнить, если хотите глубже и/или шире разобраться в материале.

### Задание 5*. Работа с числами. 

Запишите в redis ключ key5 со значением типа "int" равным числу 5. Увеличьте его на 5, чтобы в итоге в значении лежало число 10.  

*Приведите скриншот, где будут проделаны все операции и будет видно, что значение key5 стало равно 10.*
![image](https://user-images.githubusercontent.com/105008137/181239146-5db88070-8f41-4f99-9ac1-84f8901bf990.png)

