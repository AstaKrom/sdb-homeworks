# Устанавливаем зону Москва
sudo timedatectl set-timezone Europe/Moscow

# Установка Elasticsearch. Нужен VPN
# 1) Зависимости
sudo apt install gnupg apt-transport-https -y
# 2) gpg-ключ
wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add
# 3) добавляем репозиторий в apt
echo "deb https://artifacts.elastic.co/packages/7.x/apt stable main" | sudo tee /etc/apt/sources.list.d/elastic-7.x.list
# 4) устанавливаем elastic
sudo apt update
sudo apt-get install elasticsearch -y
# 5) обновляем конфиги systemd
sudo systemctl daemon-reload
# 6) включаем юнит
sudo systemctl enable elasticsearch.service
# 7) запускаем сервис. Запускается долго
sudo systemctl start elasticsearch.service
sudo systemctl status elasticsearch.service
# 8) файл настройки
sudo nano /etc/elasticsearch/elasticsearch.yml
# 9) Если были изменения в настройках
sudo systemctl restart elasticsearch
# 10) Проверка работы
curl -X GET 'localhost:9200/_cluster/health?pretty'


# Установка Kibana
sudo apt install kibana
sudo systemctl daemon-reload
sudo systemctl enable kibana.service
sudo systemctl start kibana.service
sudo systemctl status kibana.service
# файл настройки
sudo nano /etc/kibana/kibana.yml
# Если были изменения в настройках
sudo systemctl restart kibana
# Проверка работы в браузере. Стартует тоже очень долго
http://192.168.56.18:5601/app/dev_tools#/console


# Установка Nginx
sudo apt install nginx -y
sudo systemctl start nginx
sudo systemctl status nginx
# файлы настройки Nginx
sudo nano /etc/nginx/nginx.conf

user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;
events {
        worker_connections 1024;
}

http {
        include /etc/nginx/mime.types;
        include /etc/nginx/conf.d/*.conf;
        include /etc/nginx/sites-enabled/default;
        default_type application/octet-stream;

        log_format json escape=json
                '{'
                        '"Authorization":"$http_authorization",'
                        '"RequestTime":"$time_iso8601",'
                        '"RemoteAddress":"$remote_addr",'
                        '"RemotePort":"$remote_port",'
                        '"RemoteUser":"$remote_user",'
                        '"RequestHost":"$host",'
                        '"RequestPort":"$server_port",'
                        '"RequestMethod":"$request_method",'
                        '"RequestPath":"$request_uri",'
                        '"RequestBody":"$request_body",'
                        '"ResponseStatus":"$status",'
                        '"Upstream":"$upstream_addr",'
                        '"UpstreamPath":"$uri",'
                        '"UpstreamResponseTime":"$upstream_response_time"'
                '}';

        access_log syslog:server=192.168.56.18:5555 json;
}

# проверка настроек
sudo nginx -t

# Установка Logstash. Нужен VPN
sudo apt install logstash
sudo systemctl daemon-reload
sudo systemctl enable logstash.service

# файл настройки не трогаем
sudo nano /etc/logstash/logstash.yml
# создаем отдельные файлы настройки
sudo nano /etc/logstash/conf.d/elk.conf
input {
  syslog {
    port => 5555
    tags => "nginx"
  }
}

output {
if [program] == "nginx" {
    elasticsearch {
      hosts => ["http://localhost:9200"]
      index => "nginx-index"
    }
  }
}

# запускаем
sudo systemctl start logstash.service
sudo systemctl status logstash.service

# Установка Filebeat. Нужен VPN
sudo apt install filebeat
# файл настройки
sudo nano /etc/filebeat/filebeat.yml
как в презентации
# проверка конфига
sudo filebeat  test config

# изменяем конфиг logstash
input {
  beats {
    port => 5044
  }
}
output {
        elasticsearch {
            hosts    => "localhost:9200"
            index    => "nginx-%{+YYYY.MM.dd}"
        }
}

# перезапускаем его
sudo systemctl restart logstash.service

# запускаем filebeat
sudo systemctl daemon-reload
sudo systemctl enable filebeat.service
sudo systemctl start filebeat.service
sudo systemctl status filebeat.service
